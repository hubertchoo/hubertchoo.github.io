<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>learning on Hubert Choo</title><link>https://hubertchoo.github.io/tags/learning/</link><description>Recent content in learning on Hubert Choo</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Mon, 03 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://hubertchoo.github.io/tags/learning/index.xml" rel="self" type="application/rss+xml"/><item><title>What Do I Learn To Be An FPGA Engineer?</title><link>https://hubertchoo.github.io/posts/2023/07/what-do-i-learn-to-be-an-fpga-engineer/</link><pubDate>Mon, 03 Jul 2023 00:00:00 +0000</pubDate><guid>https://hubertchoo.github.io/posts/2023/07/what-do-i-learn-to-be-an-fpga-engineer/</guid><description>How Do I Break Into The FPGA Industry? That is the title of this Reddit thread. One of the top comments mention the following:
In no particular order. FPGA - Learn to write either Verilog, SystemVerilog or VHDL, the ones you don't know how to write, at least know how to read. - Know the existence of new HDLs like SpinalHDL, Chisel, Amaranth, Bluespec-SV, etc. You do not necessarily have to know or use them, but know they exist and why.</description></item></channel></rss>